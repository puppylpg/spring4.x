<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<!-- 普通方法名匹配切面 -->
	<bean id="naiveStudent" class="com.smart.advisor.NaiveStudent" />
	<bean id="naiveTeacher" class="com.smart.advisor.NaiveTeacher" />
	<bean id="prepareBeforeAdvice" class="com.smart.advisor.PrepareBeforeAdvice" />
	<bean id="prepareAdvisor" class="com.smart.advisor.PrepareAdvisor"
		  p:advice-ref="prepareBeforeAdvice" />

	<bean id="parent" abstract="true"
		class="org.springframework.aop.framework.ProxyFactoryBean"
		p:interceptorNames="prepareAdvisor" p:proxyTargetClass="true" />
	<bean id="strengthenStudent" parent="parent" p:target-ref="naiveStudent" />
	<bean id="strengthenTeacher" parent="parent" p:target-ref="naiveTeacher" />


	<!-- 正则表达式方法名匹配切面 -->
	<bean id="regexpAdvisor"
		class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
		p:advice-ref="prepareBeforeAdvice">
		<property name="patterns">
			<list>
				<value>.*examine.*</value>
			</list>
		</property>
	</bean>
	<bean id="strengthenByRegexStudent" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:interceptorNames="regexpAdvisor" p:target-ref="naiveStudent"
		p:proxyTargetClass="true" />


	<!-- 动态切面 -->
	<bean id="dynamicAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut">
			<bean class="com.smart.advisor.PrepareDynamicPointcut" />
		</property>
		<property name="advice">
			<bean class="com.smart.advisor.PrepareBeforeAdvice" />
		</property>
	</bean>

	<bean id="strengthenByDynamicStudent" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:interceptorNames="dynamicAdvisor" p:target-ref="naiveStudent"
		p:proxyTargetClass="true" />

	<!-- 控制流程切面 -->
	<bean id="controlFlowPointcut" class="org.springframework.aop.support.ControlFlowPointcut">
		<constructor-arg type="java.lang.Class"
			value="com.smart.advisor.WaiterDelegate" />
		<constructor-arg type="java.lang.String" value="service" />
	</bean>
	<bean id="controlFlowAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
		p:pointcut-ref="controlFlowPointcut" p:advice-ref="prepareBeforeAdvice" />
	<bean id="waiter3" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:interceptorNames="controlFlowAdvisor" p:target-ref="naiveStudent"
		p:proxyTargetClass="true" />

	<!-- 复合切点切面 -->
	<bean id="gcp" class="com.smart.advisor.GreetingComposablePointcut" />
	<bean id="composableAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
		p:pointcut="#{gcp.intersectionPointcut}" p:advice-ref="prepareBeforeAdvice" />
	<bean id="waiter4" class="org.springframework.aop.framework.ProxyFactoryBean"
		p:interceptorNames="composableAdvisor" p:target-ref="naiveStudent"
		p:proxyTargetClass="true" />

	<!--引入切面-->
	<bean id="introduceAdvisor"
		class="org.springframework.aop.support.DefaultIntroductionAdvisor">
		<constructor-arg>
			<bean class="com.smart.introduce.ControllablePerformaceMonitor" />
		</constructor-arg>
	</bean>
	<bean id="forumServiceTarget" class="com.smart.introduce.ForumService" />
	<bean id="forumService" class="org.springframework.aop.framework.ProxyFactoryBean"
	      p:interceptorNames="introduceAdvisor"
	      p:target-ref="forumServiceTarget"
	      p:proxyTargetClass="true"/>
</beans>
